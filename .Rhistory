(sumcoef[2,1]-qt(.975,30)*sumcoef[2,2])*2
data(mtcars)
head(mtcars)
fit<-lm(mpg~am*wt,mtcars)
summary(fit)
with(mtcars,plot(mpg,wt))
abline(c(fit$coeff[1].fit$coeff[2]),col="red")
abline(c(fit$coeff[1],fit$coeff[2]),col="red")
c(fit$coef[1],fit$coef[2])
abline(c(fit$coef[1],fit$coef[2]))
abline(c(fit$coeff[1],fit$coeff[2]),col="red",lwd=3)
plot(mtcars$wt,mtcars$mpg,pch=19)
abline(c(fit$coeff[1],fit$coeff[2]),col="red",lwd=3)
fit<-lm(mpg~wt*am,mtcars)
abline(c(fit$coeff[1],fit$coeff[2]),col="red",lwd=3)
abline(c(fit$coeff[1]+fit$coeff[3],fit$coeff[2]+fit$coeff[4]),col="blue",lwd=3)
points(mtcars$wt,mtcars$mpg,col=((mtcars$am==1)*1+1))
library(ggplot2)
qplot(mpg,wt,data=mtcars,color=am,geom=c("point","smooth"),method="lm")
qplot(mpg,wt,data=mtcars,color=am,geom=c("point","smooth"))
qplot(mpg,wt,data=mtcars,color=am,geom=c("point","smooth"),facets=.~am)
qplot(wt,mpg,data=mtcars,color=am,geom=c("point","smooth")+stat_smooth(method="lm",formula=mpg~wt))
qplot(wt,mpg,data=mtcars,color=am,geom=c("point","smooth")+stat_smooth(method="lm",formula=y~x))
qplot(wt,mpg,data=mtcars,color=am,geom=c("point","smooth"))+stat_smooth(method="lm",formula=y~x))
qplot(wt,mpg,data=mtcars,color=am,geom=c("point","smooth"))+stat_smooth(method="lm",formula=y~x)
qplot(y=wt,x=mpg,data=mtcars,color=am,geom=c("point","smooth"))+stat_smooth(method="lm",formula=y~x)
qplot(y=wt,x=mpg,data=mtcars,col=factor(am),geom=c("point","smooth"))+stat_smooth(method="lm",formula=y~x)
qplot(y=wt,x=mpg,data=mtcars,col=factor(am),geom=c("point"))+stat_smooth(method="lm",formula=y~x)
qplot(x=wt,y=mpg,data=mtcars,col=factor(am),geom=c("point"))+stat_smooth(method="lm",formula=y~x)
data(mtcars)
mtcars
mtcars$cyl<-as.factor(mtcars$cyl)
View(mtcars)
fit<-lm(mpg~.,mtcars)
summary(fit)
fit2<-lm(mpg~wt+cyl+am,mtcars)
summary(fit2)
fit3<-lm(mpg~wt+am,mtcars)
fit4<-lm(mpg~wt*am,mtcars)
anova(fit3,fit4)
summary(fit4)
lm(qsec~.,mtcars)
summary(lm(qsec~.,mtcars))
last<-read.csv("lastman.csv")
View(last)
last$julian<-julian(last$Date)
last$julian<-julian(as.date(last$Date,"%m/%d/%Y"))
last$julian<-julian(as.Date(last$Date,"%m/%d/%Y"))
names(last)[1]<-"out"
with(last,plot(out,julian))
with(last,plot(julian,out))
data(mtcars)
fit<-lm(mpg~wt*am,mtcars)
plot(predict(fit),resid(fit))
plot(predict(fit),resid(fit),pch=19)
fit2<-lm(mpg~wt+am,mtcars)
plot(predict(fit2),resid(fit2),pch=19)
anova(fit2,fit)
fitq<-lm(mpg~qsec,mtcars)
summary(fitq)
plot(predict(fitq),resid(fitq),pch=19)
summary(fit2)
summary(fit1)
summary(fit)
data(mtcars)
View(mtcars)
factors<-c(2,10,11)
mtcars[,factors]<-as.factor(mtcars[,factors])
for (i in factors) mtcars[,i]<-as.factor(mtcars[,i])
str(mtcars)
fitall<-lm(mpg~.,mtcars)
summary(fitall)
anova(fitall)
plot(predict(fitall),resid(fitall))
round(dfbetas(fitall),3)
library(car)
vif(fitall)
cor(mtcars)
for (i in factors) mtcars[,i]<-as.numeric(mtcars[,i])
cor(mtcars)
pairs(mtcars)
library(dplyr)
data("ToothGrowth")
ToothGrowth$treatment <- paste(ToothGrowth$supp, ToothGrowth$dose, sep = "")
tg<-group_by(ToothGrowth, treatment)
boxplot(len ~ treatment, data = ToothGrowth)
tg_sum <- summarize(tg, mean(len), sd(len), median(len))
results <- pairwise.t.test(tg$len, tg$treatment,
p.adjust.method = "none")
results$p.value < 0.05
results
data(mtcars)
head(mtcars)
mtcont<-mtcars[2:7,]
logcars<-log(mtcont)
cars.pca<-pca(logcars,center=TRUE,scale=TRUE)
cars.pca<-prcomp(logcars,center=TRUE,scale=TRUE)
logcars
mtcont<-mtcars[,2:7]
logcars<-log(mtcont)
cars.pca<-prcomp(logcars,center=TRUE,scale=TRUE)
print(cars.pca)
plot(cars.pca)
summary(cars.pca)
library(ggbiplot)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1,
groups = rownames(mtcars), ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
rownames(mtcars)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
mtcont<-mtcars[,2:6]
logcars<-log(mtcont)
cars.pca<-prcomp(logcars,center=TRUE,scale=TRUE)
carnames<-rownames(mtcont)
summary(cars.pca)
plot(cars.pca)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1,
groups = carnames
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1,
groups = carnames,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
cars.pca
g
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1
ellipse = TRUE,
circle = TRUE)
g <- ggbiplot(cars.pca, obs.scale = 1, var.scale = 1,
ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
data(mtcars)
wss <- (nrow(mtcars)-1)*sum(apply(mtcars,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mtcars,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(mtcars, 3) # 3 cluster solution
# get cluster means
aggregate(mtcars,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mtcars <- data.frame(mtcars, fit$cluster)
mtcars <- data.frame(mtcars, fit$cluster)
library(cluster)
clusplot(mtcars, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
fit <- kmeans(mtcars, 4) # 3 cluster solution
# get cluster means
aggregate(mtcars,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mtcars <- data.frame(mtcars, fit$cluster)
library(cluster)
clusplot(mtcars, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
data(mtcars)
fit <- kmeans(mtcars, 4) # 3 cluster solution
# get cluster means
aggregate(mtcars,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mtcars <- data.frame(mtcars, fit$cluster)
library(cluster)
clusplot(mtcars, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
data(mtcars)
fit <- kmeans(mtcars, 2) # 3 cluster solution
# get cluster means
aggregate(mtcars,by=list(fit$cluster),FUN=mean)
# append cluster assignment
mtcars <- data.frame(mtcars, fit$cluster)
library(cluster)
clusplot(mtcars, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
summary(fit)
fit
library(fpc)
plotcluster(mtcars, fit$cluster)
install.packages("fpc")
library(fpc)
plotcluster(mtcars, fit$cluster)
fit2 <- kmeans(mtcars, 2)
fit2 <- kmeans(mtcars, 3)
cluster.stats(d, fit$cluster, fit2$cluster)
d <- dist(mtcars, method = "euclidean")
cluster.stats(d, fit$cluster, fit2$cluster)
install.packages("kernlab")
library(kernlab)
data(spam)
View(spam)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
(61 + 458)/(1346 + 458 + 61 + 449)
fit<-kmeans(spam,5)
?fit
fit
library(kernlab)
data(spam)
sp2<-spam(,1:57)
sp2<-spam[,1:57]
kmeans(sp2)
kmeans(sp2,3)
fit<-kmeans(sp2,3)
plot(fit)
library(cluster)
clusplot(sp2, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
prcomp(sp2)
pca.spam<-prcomp(sp2)
summary(pca.spam)
plot(pca.spam)
data(mtcars)
library(dplyr)
mtcars<-group_by(am)
mtcars<-group_by(mtcars,am)
summarize(mtcars,mean(mpg))
summarize(mtcars,mean(weight))
summarize(mtcars,mean(wt))
summarize(mtcars,mean(mpg),mean(wt))
cor(mtcars)
round(cor(mtcars),3)
princomp(mtcars)
plot(princomp(mtcars))
fit1<-lm(mpg~.)
fit1<-lm(mpg~.,mtcars)
anova(fit1)
mtcars$cyl<-as.factor(mtcars$cyl)
fit1<-lm(mpg~.,mtcars)
anova(fit1)
fit2<-lm(mpg~wt*am,mtcars)
summary(fit1)
summary(fit2)
fit3<-lm(mpg~wt+am+am*wt+cyl,mtcars)
summary(fit3)
plot(fit3)
anova(fit2,fit3)
fit3<-lm(mpg~wt+am+wt*am+cyl,mtcars)
summary(fit3)
library(ggbiplot)
cars.pca<-princomp(mtcars)
library(dplyr)
data(mtcars)
mtcars<-group_by(mtcars,am)
summarize(mtcars,mean(mpg),mean(wt))
round(cor(mtcars),3)
mtcars$cyl<-as.factor(mtcars$cyl)
fit1<-lm(mpg~.,mtcars)
fit2<-lm(mpg~wt*am,mtcars)
fit3<-lm(mpg~wt+am+wt*am+cyl,mtcars)
library(ggplot2)
qplot(wt,mpg,data=mtcars,color=am,geom="point")+
stat_smooth(method = "lm", formula = y~x)
qplot(wt,mpg,data=mtcars,color=as.factor(am),geom="point")+
stat_smooth(method = "lm", formula = y~x)
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point(shape=1) +
geom_smooth(method=lm)
g
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point(shape=2) +
geom_smooth(method=lm)
g
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point() +
geom_smooth(method=lm)
g
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point(shape=2) +
geom_smooth(method=lm)+
labs(x="Weight in 1000 lb", y = "Miles per Gallon")
g
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point(shape=2) +
geom_smooth(method=lm)+
labs(x="Weight in 1000 lb", y = "Miles per Gallon")+
scale_color_discrete(name ="Transmission",
labels=c("Automatic", "Manual"))
g
g<-ggplot(mtcars, aes(x=wt, y=mpg, color=as.factor(am))) +
geom_point() +
geom_smooth(method=lm)+
labs(x="Weight in 1000 lb", y = "Miles per Gallon")+
scale_color_discrete(name ="Transmission",
labels=c("Automatic", "Manual"))
g
fit1
summary(fit1)
plot(fit1)
View(mtcars)
plot(fit2)
anova(tit2,fit3)
anova(fit2,fit3)
plot(fit3)
mydata<-data(mtcars)
library(leaps)
install.packages(leaps)
install.packages("leaps")
library(leaps)
leaps<-regsubsets(mpg~.,data=mydata,nbest=10)
View(mtcars)
mydata
mydata<-mtcars
leaps<-regsubsets(mpg~.,data=mydata,nbest=10)
summary(leaps)
plot(leaps,scale="r2")
library(car)
subsets(leaps, statistic="rsq")
leaps<-regsubsets(mpg~.,data=mydata,force.in = am,  nbest=10)
leaps<-regsubsets(mpg~.,data=mydata,force.in = 9,  nbest=10)
summary(leaps)
plot(leaps,scale="r2")
library(car)
subsets(leaps, statistic="rsq")
install.packages("Sxslt", repos = "http://www.omegahat.org/R", type = "source")
devtools::install_github("cboettig/Sxslt")
setwd("Y:/coursera")
load("./data/ravensData.rda")
head(ravensData)
load("ravensData.rda")
head(ravensData)
lmRavens<-lm(ravensData$ravenWinNum~ravensData$ravenScore)
summary(lmRavens)$coef
x<-seq(-10,10,length=1000)
manipulate(
plot(x,exp(beta0+beta1*x)/(1+exp(beta0+beta1*x)),
type="l",lwd=3,frame=FALSE),
beta1=slider(-2,2,step=.1,initial=2),
beta0=slider(-2,2,step=.1,initial=0)
)
isAvailable(manipulate)
load("ravensData.rda")
x<-seq(-10,10,length=1000)
manipulate(
plot(x,exp(beta0+beta1*x)/(1+exp(beta0+beta1*x)),
type="l",lwd=3,frame=FALSE),
beta1=slider(-2,2,step=.1,initial=2),
beta0=slider(-2,2,step=.1,initial=0)
)
library(manipulate)
x<-seq(-10,10,length=1000)
manipulate(
plot(x,exp(beta0+beta1*x)/(1+exp(beta0+beta1*x)),
type="l",lwd=3,frame=FALSE),
beta1=slider(-2,2,step=.1,initial=2),
beta0=slider(-2,2,step=.1,initial=0)
)
logRegRavens<-glm(ravensData$ravenWinNum~ravensData$ravenScore,family="binomial")
summary(logRegRavens)
plot(ravensData$ravenScore,logRegRavens$fitted,pch=19,col="blue",xlab="Score",ylab="ProbRavensWin")
logRegRavens$fitted.values
logRegRavens$fitted
plot(ravensData$ravenScore,logRegRavens$fitted,pch=19,col="blue",xlab="Score",ylab="ProbRavensWin")
exp(confint(logRegRavens))
anova(logRegRavens)
load("Y:/coursera/gaData.rda")
View(gaData)
Plot(gaData$visits,gaData$visits)
plot(gaData$visits,gaData$visits)
plot(gaData$date,gaData$visits)
gaData$julian<-julian(gaData$date)
View(gaData)
library(MASS)
?shuttle
fit<-glm(auto~wind,data=shuttle,family="binomial")
data(shuttle)
head(shuttle)
fit<-glm(use~wind,data=shuttle,family="binomial")
summary(fit)
View(shuttle)
exp(fit)
exp(fit$coefficients)
exp(-fit$coefficients)
fit2<-glm(use~wind+magn,data=shuttle,family="binomial")
summary(fit2)
exp(fit2$coefficients)
1/exp(fit$coefficients)
1/exp(fit2$coefficients)
shuttle$oppwind<-1-(shuttle$wind=="head")
fit3<-glm(use,oppwind,data=shuttle,family="binomial")
fit3<-glm(use~oppwind,data=shuttle,family="binomial")
summary(fit3)
shuttle$oppwind<-shuttle$wind=="head"
fit3<-glm(use~oppwind,data=shuttle,family="binomial")
summary(fit3)
data("InsectSprays")
head(InsectSprays)
fit4<-glm(count~spray,data=InsectSprays,family="poisson")
summary(fit4)
exp(fit4$coefficients)
1/exp(fit4$coefficients)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot<-0
splineTerms<-sapply(knot,function(kn)(x>kn)*(x-kn))
View(splineTerms)
xMat<-cbind(1,x,splineTerms)
lm(y~xMat)
yhat<-predict(lm(y~xMat))
yhat
plot(x,y)
lines(x,yhat,col="red",lwd=2)
View(ravensData)
fit<-glm(ravenWinNum~ravenScore,data=ravensData,family="binomial")
summary(fit)
fit2<-glm(I(1-ravenWinNum)~ravenScore,data=ravensData,family="binomial")
summary(fit2)
View(gaData)
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
family="poisson",data=gaData)
summary(glm2)
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
glm2 <- glm(gaData$visits ~ gaData$julian,offset=log(10)+gaData$julian,family="poisson")
glm2 <- glm(gaData$visits ~ gaData$julian,offset=log(10)+log(gaData$julian),family="poisson")
summary(glm2)
summary(glm1)
gaData$julian10<-gaData$julian/10
View(gaData)
glm1 <- glm(gaData$visits ~ gaData$julian10,family="poisson")
glm1 <- glm(gaData$visits ~ gaData$julian,family="poisson")
glm2 <- glm(gaData$visits ~ gaData$julian10,family="poisson")
summary(glm1)
glm1$coefficients
glm2$coefficients
glm3 <- glm(gaData$visits ~ gaData$julian,offset=log(10),family="poisson")
glm3 <- glm(gaData$visits ~ gaData$julian,offset=log(10)+gadata$julian,family="poisson")
glm3 <- glm(gaData$visits ~ gaData$julian,offset=log(10)+gaData$julian,family="poisson")
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(visits+1),
family="poisson",data=gaData)
glm3<-glm(gaData$simplystats ~ julian(gaData$date),offset=log(10)+log(visits+1),
+             family="poisson",data=gaData)
glm3 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(10)+log(visits+1),
family="poisson",data=gaData)
glm2$coefficients
glm3$coefficients
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(gaData$date),
family="poisson",data=gaData)
glm2 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(gaData$julian),
family="poisson",data=gaData)
glm3 <- glm(gaData$simplystats ~ julian(gaData$date),offset=log(10)+log(gaData$julian),
family="poisson",data=gaData)
glm2$coefficients
glm3$coefficients
library(MASS)
data(shuttle)
head(shuttle)
View(shuttle)
shuttle$head<-1*(shuttle$wind=="head")
View(shuttle)
shuttle$autouse<-1*(shuttle$use=="auto")
fit<-glm(autouse~head,data=shuttle,family=binomial)
fit
exp(fit$coefficients)
fit<-glm(autouse~head,data=shuttle)
fit$coefficients
plot(fit)
setwd("C:/Users/ttegt/coursera/RepData_PeerAssessment1")
